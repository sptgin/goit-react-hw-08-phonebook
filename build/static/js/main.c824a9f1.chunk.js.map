{"version":3,"sources":["redux/selectors.js","services/phonebook-api.js","redux/slice.js","components/Section.js","components/MainMenu.js","pages/Home.js","components/LoginForm.js","pages/Login.js","components/RegisterForm.js","pages/Register.js","components/ContactForm.js","components/Filter.js","components/ContactListItem.js","components/Loader.js","components/ContactsList.js","pages/Contacts.js","routes/PublicRoute.js","routes/PrivateRoute.js","App.js","redux/store.js","index.js"],"names":["selectors","getName","state","auth","user","name","getToken","token","getFilter","filter","isLogin","isLoggedIn","phoneBookApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","set","tagTypes","endpoints","build","getContacts","query","providesTags","result","map","type","id","addContact","mutation","newContact","url","method","body","invalidatesTags","delContact","error","signup","userData","login","logout","getCurrentUser","useGetContactsQuery","useDelContactMutation","useAddContactMutation","useSignupMutation","useLoginMutation","useLogoutMutation","useGetCurrentUserQuery","authSlice","createSlice","initialState","email","reducers","setCredentials","payload","setUser","setLogout","_","filterSlice","setFilter","action","actions","Section","title","children","className","MainMenu","isLogged","useSelector","logOut","dispatch","useDispatch","navigate","useNavigate","to","onClick","Home","LoginForm","useForm","register","handleSubmit","reset","errors","formState","loginUser","onSubmit","data","unwrap","then","fulfilled","catch","alert","required","password","Login","RegisterForm","onRegister","a","pattern","placeholder","minLength","Register","ContactForm","contacts","console","log","some","contact","toLowerCase","number","PropsType","func","isRequired","Filter","value","onChange","event","target","ContactListItem","deleteContact","prototype","PropTypes","string","onDeleteContact","SpinnerLoader","color","height","width","timeout","ContactsList","isFetching","toLocaleLowerCase","includes","Contacts","PublicRoute","isAuth","ComponentForRoute","component","PrivateRoute","App","skip","useEffect","path","element","persistConfig","key","storage","whitelist","persistedAuthReducer","persistReducer","reducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","perpsiststore","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.c824a9f1.chunk.js","sourcesContent":["const getName = state => state.auth.user.name;\r\nconst getToken = state => state.auth.token;\r\nconst isLogin = state => state.auth.isLoggedIn;\r\nconst getFilter = state => state.filter;\r\n\r\nconst selectors = {\r\n  getName,\r\n  getToken,\r\n  getFilter,\r\n  isLogin,\r\n};\r\n\r\nexport default selectors;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\n// Define a service using a base URL and expected endpoints\r\nexport const phoneBookApi = createApi({\r\n  reducerPath: 'phoneBookApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com/',\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState().auth.token;\r\n      if (token) {\r\n        headers.set('authorization', `${token}`);\r\n      }\r\n\r\n      return headers;\r\n    },\r\n  }),\r\n  tagTypes: ['Contacts'],\r\n\r\n  endpoints: build => ({\r\n    getContacts: build.query({\r\n      query: () => `contacts`,\r\n\r\n      providesTags: result =>\r\n        // is result available?\r\n        result\r\n          ? // successful query\r\n            [\r\n              ...result.map(({ id }) => ({ type: 'Contacts', id })),\r\n              { type: 'Contacts', id: 'LIST' },\r\n            ]\r\n          : // an error occurred, but we still want to refetch this query when `{ type: 'Posts', id: 'LIST' }` is invalidated\r\n            [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n    addContact: build.mutation({\r\n      query: newContact => ({\r\n        url: 'contacts',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n    delContact: build.mutation({\r\n      query: id => ({\r\n        url: `contacts/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: (result, error, id) => [{ type: 'Contacts', id }],\r\n    }),\r\n    signup: build.mutation({\r\n      query: userData => ({\r\n        url: '/users/signup',\r\n        method: 'POST',\r\n        body: userData,\r\n      }),\r\n    }),\r\n    login: build.mutation({\r\n      query: userData => ({\r\n        url: '/users/login',\r\n        method: 'POST',\r\n        body: userData,\r\n      }),\r\n    }),\r\n    logout: build.mutation({\r\n      query: () => ({\r\n        url: '/users/logout',\r\n        method: 'POST',\r\n      }),\r\n    }),\r\n    getCurrentUser: build.query({\r\n      query: () => '/users/current',\r\n    }),\r\n  }),\r\n});\r\n\r\n// Export hooks for usage in functional components, which are\r\n// auto-generated based on the defined endpoints\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useDelContactMutation,\r\n  useAddContactMutation,\r\n  useSignupMutation,\r\n  useLoginMutation,\r\n  useLogoutMutation,\r\n  useGetCurrentUserQuery,\r\n} = phoneBookApi;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setCredentials: (state, { payload: { user, token } }) => {\r\n      state.user = user;\r\n      state.token = token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    setUser: (state, { payload }) => {\r\n      state.user.name = payload.name;\r\n      state.isLoggedIn = true;\r\n    },\r\n    setLogout: (state, _) => {\r\n      state.name = '';\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const filterSlice = createSlice({\r\n  name: 'filter',\r\n  initialState: '',\r\n  reducers: {\r\n    setFilter: (_, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport const { setFilter } = filterSlice.actions;\r\nexport const { setCredentials, setUser, setLogout } = authSlice.actions;\r\n","import React from 'react';\r\nimport './Section.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className=\"task__section\">\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLogoutMutation } from '../services/phonebook-api';\r\nimport selectors from '../redux/selectors';\r\nimport { setLogout } from '../redux/slice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Section from './Section';\r\nimport './MainMenu.css';\r\n\r\nexport default function MainMenu() {\r\n  const isLogged = useSelector(selectors.isLogin);\r\n  const [logOut] = useLogoutMutation();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const handleLogout = () => {\r\n    logOut();\r\n    dispatch(setLogout());\r\n    navigate('/');\r\n  };\r\n  return (\r\n    <div>\r\n      <Section title=\"\">\r\n        <nav className=\"mainmenu__nav\">\r\n          <ul className=\"mainmenu__list\">\r\n            <li className=\"mainmenu__list-item\">\r\n              <Link className=\"mainmenu__link\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"mainmenu__list-item\">\r\n              <Link className=\"mainmenu__link\" to=\"/contacts\">\r\n                Phonebook\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {!isLogged && (\r\n            <ul className=\"mainmenu__loginlist\">\r\n              <li className=\"mainmenu__loginlist-item\">\r\n                <Link className=\"mainmenu__link\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n              <li className=\"mainmenu__loginlist-item\">\r\n                <Link className=\"mainmenu__link\" to=\"/register\">\r\n                  Register\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n          {isLogged && (\r\n            <div>\r\n              <button\r\n                className=\"mainmenu__form-button\"\r\n                type=\"button\"\r\n                onClick={handleLogout}\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          )}\r\n        </nav>\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","export function Home() {\r\n  return <></>;\r\n}\r\n","import { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCredentials } from '../redux/slice';\r\nimport { useLoginMutation } from '../services/phonebook-api';\r\nimport './LoginForm.css';\r\n\r\nexport default function LoginForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [loginUser] = useLoginMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = data => {\r\n    loginUser(data)\r\n      .unwrap()\r\n      .then(fulfilled => {\r\n        dispatch(setCredentials(fulfilled));\r\n      })\r\n      .catch(error => alert('Login or password is invalid!'));\r\n\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"login__form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <label className=\"login__form-label\">\r\n          Email\r\n          <input\r\n            className=\"login__form-input\"\r\n            {...register('email', { required: true })}\r\n            title=\"email\"\r\n            type=\"email\"\r\n          />\r\n          {errors?.name?.type === 'required' && (\r\n            <p>This field is required ...</p>\r\n          )}\r\n        </label>\r\n        <label className=\"login__form-label\">\r\n          Password\r\n          <input\r\n            className=\"login__form-input\"\r\n            {...register('password', { required: true })}\r\n            title=\"password\"\r\n            type=\"password\"\r\n          />\r\n          {errors?.password?.type === 'required' && (\r\n            <p>This field is required ...</p>\r\n          )}\r\n        </label>\r\n        <button className=\"login__form-button\" type=\"submit\">\r\n          Log in\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import Section from '../components/Section';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nexport function Login() {\r\n  return (\r\n    <>\r\n      <Section title=\"Log in\">\r\n        <LoginForm />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSignupMutation } from '../services/phonebook-api';\r\nimport { setCredentials } from '../redux/slice';\r\nimport './RegisterForm.css';\r\n\r\nexport default function RegisterForm() {\r\n  const [onRegister] = useSignupMutation();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async data => {\r\n    try {\r\n      const userData = await onRegister(data).unwrap();\r\n      dispatch(setCredentials(userData));\r\n      reset();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"register__form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <label className=\"register__form-label\">\r\n          Name\r\n          <input\r\n            className=\"register__form-input\"\r\n            {...register('name', {\r\n              required: true,\r\n              pattern:\r\n                /^[a-zA-Zа-яА-Я0-9](_(?!(\\.|_))|\\.(?!(_|\\.))|[a-zA-Zа-яА-Я0-9]){2,18}[a-zA-Zа-яА-Я0-9]$/,\r\n            })}\r\n            title=\"Name\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n          />\r\n          {errors?.name?.type === 'required' && (\r\n            <p>This field is required ...</p>\r\n          )}\r\n          {errors?.name?.type === 'pattern' && <p>Characters only</p>}\r\n        </label>\r\n        <label className=\"register__form-label\">\r\n          Email\r\n          <input\r\n            className=\"register__form-input\"\r\n            {...register('email', { required: true, type: 'email' })}\r\n            title=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"abc@abc.com\"\r\n          />\r\n          {errors?.email?.type === 'required' && (\r\n            <p>This field is required ...</p>\r\n          )}\r\n        </label>\r\n        <label className=\"register__form-label\">\r\n          Password\r\n          <input\r\n            className=\"register__form-input\"\r\n            {...register('password', { required: true, minLength: 7 })}\r\n            title=\"Input your password\"\r\n            type=\"password\"\r\n            placeholder=\"min 7 char\"\r\n          />\r\n          {errors?.password?.type === 'required' && (\r\n            <p>This field is required ...</p>\r\n          )}\r\n          {errors?.password?.type === 'minLength' && (\r\n            <p>Password must contain minimum 7 charts</p>\r\n          )}\r\n        </label>\r\n        <button className=\"register__form-button\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import Section from '../components/Section';\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nexport function Register() {\r\n  return (\r\n    <>\r\n      <Section title=\"Register\">\r\n        <RegisterForm />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropsType from 'prop-types';\r\nimport './ContactForm.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n  useAddContactMutation,\r\n  useGetContactsQuery,\r\n} from '../services/phonebook-api';\r\n\r\nexport default function ContactForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const { data: contacts } = useGetContactsQuery();\r\n  const [addContact] = useAddContactMutation();\r\n\r\n  const onSubmit = data => {\r\n    console.log(contacts);\r\n\r\n    const checkContact = contacts.some(\r\n      contact => contact.name.toLowerCase() === data.name.toLowerCase(),\r\n    );\r\n    if (checkContact) {\r\n      alert(`${data.name} is already exists`);\r\n      return;\r\n    } else {\r\n      addContact(data);\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"contacts__form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <label className=\"contcts__form-label\">\r\n        Name\r\n        <input\r\n          className=\"contcts__form-input\"\r\n          type=\"text\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          {...register('name', {\r\n            required: true,\r\n            pattern:\r\n              /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\r\n          })}\r\n        />\r\n        {errors?.name?.type === 'required' && <p>This field is required</p>}\r\n        {errors?.name?.type === 'pattern' && (\r\n          <p>Alphabetical characters only</p>\r\n        )}\r\n      </label>\r\n      <label className=\"contcts__form-label\">\r\n        Phone\r\n        <input\r\n          className=\"contcts__form-input\"\r\n          type=\"tel\"\r\n          {...register('number', {\r\n            required: true,\r\n            pattern:\r\n              /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\r\n          })}\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        />\r\n        {errors?.number?.type === 'required' && <p>This field is required</p>}\r\n        {errors?.number?.type === 'pattern' && <p>Numeric characters only</p>}\r\n      </label>\r\n      <button className=\"contacts__form-button\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.PropsType = {\r\n  onSubmit: PropsType.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport './Filter.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setFilter } from '../redux/slice';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"filter__header\">Find contacts by name :</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        className=\"filter__input\"\r\n        onChange={event => dispatch(setFilter(event.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport './ContactListItem.css';\r\nimport { useDelContactMutation } from '../services/phonebook-api';\r\n\r\nexport default function ContactListItem({ contact }) {\r\n  const [deleteContact] = useDelContactMutation();\r\n  return (\r\n    <li className=\"contact__list-item\">\r\n      <div>\r\n        {contact.name}: {contact.number}\r\n      </div>\r\n      <button\r\n        className=\"contact__list-delete-button\"\r\n        type=\"submit\"\r\n        id={contact.id}\r\n        onClick={() => deleteContact(contact.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.prototype = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport './Loader.css';\r\n\r\nfunction SpinnerLoader() {\r\n  return (\r\n    <Loader\r\n      className=\"SpinnerLoader\"\r\n      type=\"Watch\"\r\n      color=\"#808080\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n}\r\n\r\nexport default SpinnerLoader;\r\n","import ContactListItem from './ContactListItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetContactsQuery } from '../services/phonebook-api';\r\nimport Loader from '../components/Loader';\r\nimport './ContactsList.css';\r\n\r\nexport default function ContactsList() {\r\n  const filter = useSelector(state => state.filter);\r\n  const { data, isFetching } = useGetContactsQuery();\r\n  return (\r\n    <div>\r\n      {isFetching && <Loader />}\r\n      {data && !isFetching && (\r\n        <ul className=\"contact__list\">\r\n          {data\r\n            .filter(contact =>\r\n              contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\r\n            )\r\n            .map(contact => (\r\n              <ContactListItem\r\n                className=\"contacts__list-item\"\r\n                key={contact.id}\r\n                contact={contact}\r\n              />\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import Section from '../components/Section';\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactsList from '../components/ContactsList';\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactsList />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import { Navigate } from 'react-router-dom';\r\n\r\nexport function PublicRoute({ isAuth, component: ComponentForRoute }) {\r\n  return <>{isAuth ? <Navigate to=\"/contacts\" /> : <ComponentForRoute />}</>;\r\n}\r\n","import { Navigate } from 'react-router-dom';\r\n\r\nexport function PrivateRoute({ isAuth, component: ComponentForRoute }) {\r\n  return <>{isAuth ? <ComponentForRoute /> : <Navigate to=\"/\" />}</>;\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport selectors from './redux/selectors';\r\nimport { useEffect } from 'react';\r\nimport { useGetCurrentUserQuery } from './services/phonebook-api';\r\nimport { setUser } from './redux/slice';\r\nimport './App.css';\r\nimport MainMenu from './components/MainMenu';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { Home } from './pages/Home';\r\nimport { Login } from './pages/Login';\r\nimport { Register } from './pages/Register';\r\nimport Contacts from './pages/Contacts';\r\nimport { PublicRoute } from './routes/PublicRoute';\r\nimport { PrivateRoute } from './routes/PrivateRoute';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector(selectors.isLogin);\r\n  const token = useSelector(selectors.getToken);\r\n  const { data } = useGetCurrentUserQuery('', {\r\n    skip: token === null || (token && isAuth),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isAuth) return;\r\n    data && dispatch(setUser(data));\r\n  }, [data, dispatch, isAuth]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"header__main\">React HW 008 Phonebook</h1>\r\n      <MainMenu />\r\n      <main>\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={<PublicRoute isAuth={isAuth} component={Home} />}\r\n          />\r\n          <Route\r\n            path=\"/login\"\r\n            element={<PublicRoute isAuth={isAuth} component={Login} />}\r\n          />\r\n          <Route\r\n            path=\"/register\"\r\n            element={<PublicRoute isAuth={isAuth} component={Register} />}\r\n          />\r\n          <Route\r\n            path=\"/contacts\"\r\n            element={<PrivateRoute isAuth={isAuth} component={Contacts} />}\r\n          />\r\n        </Routes>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { phoneBookApi } from '../services/phonebook-api';\r\nimport { filterSlice, authSlice } from './slice';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst persistedAuthReducer = persistReducer(persistConfig, authSlice.reducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [phoneBookApi.reducerPath]: phoneBookApi.reducer,\r\n    filter: filterSlice.reducer,\r\n    auth: persistedAuthReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(phoneBookApi.middleware),\r\n});\r\nexport const perpsiststore = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { store, perpsiststore } from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={<Loader />} persistor={perpsiststore}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}